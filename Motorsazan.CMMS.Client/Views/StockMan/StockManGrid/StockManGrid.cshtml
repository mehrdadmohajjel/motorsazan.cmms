@using Motorsazan.CMMS.Client.Controllers
@model Motorsazan.CMMS.Shared.Models.Output.StockMan.OutputGetStockManListByCondition[]

@Html.DevExpress().GridView(settings =>
{

    settings.Name = "stockManGrid";
    settings.CallbackRouteValues = new { Controller = "StockMan", Action = "StockManGrid" };
    settings.ClientSideEvents.BeginCallback =
        "motorsazanClient.stockMan.handleStockManGridBeginCallback";
    settings.ClientSideEvents.EndCallback =
        "motorsazanClient.stockMan.handleStockManGridEndCallback";
    settings.ClientSideEvents.DetailRowExpanding =
        "motorsazanClient.stockMan.setStockManGridFocusedRowOnExpanding";

    settings.ClientSideEvents.SelectionChanged =
        "motorsazanClient.stockMan.handleGridSelectionChanged";

    settings.ClientSideEvents.RowClick = "function(s, e){ s.ExpandDetailRow(e.visibleIndex); }";

    settings.Width = Unit.Percentage(100);

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.AllowSelectByRowClick = true;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;

    settings.KeyFieldName = "WorkOrderId";

    settings.Columns.Add(column =>
    {
        column.FieldName = "RowIndex";
        column.Caption = "ردیف";
        column.Width = Unit.Pixel(60);
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        settings.CustomUnboundColumnData = (s, e) =>
        {
            if (e.Column.FieldName == "RowIndex")
                e.Value = e.ListSourceRowIndex + 1;
        };
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 1;
        column.FieldName = "WorkOrderStatusTypeShowName";
        column.Caption = "وضیعت";
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 2;
        column.FieldName = "StopTypeTitle";
        column.Caption = "نوع توقف";
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 3;
        column.FieldName = "ShamsiCreationDate";
        column.Caption = "زمان ثبت سفارشکار";
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 4;
        column.FieldName = "WorkOrderSerial";
        column.Caption = "سفارشکار";
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 5;
        column.FieldName = "MaintenanceGroupName";
        column.Caption = "گروه تعمیراتی";
        column.EditorProperties().ComboBox(cb =>
        {
            cb.DataSource = StockManController.GetAllMaintenanceGroupList();
            cb.TextField = "MaintenanceGroupName";
            cb.ValueField = "MaintenanceGroupName";
            cb.ValueType = typeof(string);
            cb.DropDownStyle = DropDownStyle.DropDown;
        });
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 6;
        column.FieldName = "OldMachineCode";
        column.Caption = "کد دستگاه";
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 7;
        column.FieldName = "OperationCode";
        column.Caption = "OP";
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 8;
        column.FieldName = "DepartmentName";
        column.Caption = "محل دستگاه";
    });


    settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
    settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
    settings.SettingsExport.EnableClientSideExportAPI = true;
    settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
    settings.Toolbars.Add(t =>
    {
        t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "خروجی اکسل";
    });

    settings.SettingsDetail.ShowDetailRow = true;
    settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
    settings.SetDetailRowTemplateContent(row =>
    {
        var workOrderId = Convert.ToInt64(DataBinder.Eval(row.DataItem, "WorkOrderId"));
        Html.RenderAction("StockManGridDetailRow", "StockMan", new { WorkOrderId = workOrderId });
    });

    settings.SettingsBehavior.AutoExpandAllGroups = true;

    settings.SettingsSearchPanel.Visible = true;
    settings.SettingsSearchPanel.EditorNullTextDisplayMode = NullTextDisplayMode.Unfocused;
    settings.SettingsSearchPanel.AllowTextInputTimer = false;
    settings.SettingsText.SearchPanelEditorNullText = "عبارت مورد نظر جهت جستجو در لیست را وارد کنید";

    settings.SettingsLoadingPanel.Text = "در حال دریافت اطلاعات";
    settings.SettingsPager.Summary.Text = "صفحه‌ {0} از {1} - تعداد کل : {2}";
    settings.SettingsPager.Summary.Position = PagerButtonPosition.Right;
    settings.SettingsPager.AlwaysShowPager = false;
    settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
    settings.SettingsText.EmptyDataRow = "موردی یافت نشد";
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSize = 25;
    settings.SettingsPager.PageSizeItemSettings.Caption = "تعداد سطر :";
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "50", "100", "200", "500" };

}).Bind(Model).GetHtml()
