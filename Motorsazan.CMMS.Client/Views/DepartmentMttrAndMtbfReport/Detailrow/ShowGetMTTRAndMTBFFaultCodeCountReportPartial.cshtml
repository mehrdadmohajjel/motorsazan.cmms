
@using DevExpress.Data
@model Motorsazan.CMMS.Shared.Models.Output.DepartmentMttrAndMtbfReport.OutputGetMTTRAndMTBFFaultCodeCountReportByMachineId[]

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "faultCodeGridModal";
    settings.CallbackRouteValues = new { Controller = "DepartmentMttrAndMtbfReport", Action = "ShowGetMttrAndMtbfFaultCodeCountReportPartial" };
    settings.ClientSideEvents.BeginCallback =
        "motorsazanClient.departmentMttrAndMtbfReport.handleGetMttrAndMtbfFaultCodeCountGridBeginCallback";

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = false;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.AllowSelectByRowClick = true;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
    settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
    settings.Width = Unit.Percentage(100);

    settings.SettingsBehavior.AutoExpandAllGroups = true;

    settings.EnableRowsCache = true;

    settings.KeyFieldName = "OperationItemCode";
    settings.Columns.Add(column =>
    {
        column.FieldName = "RowIndex";
        column.Caption = "ردیف";
        column.Width = Unit.Pixel(60);
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        settings.CustomUnboundColumnData = (s, e) =>
        {
            if (e.Column.FieldName == "RowIndex")
                e.Value = e.ListSourceRowIndex + 1;
        };
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "MachineName";
        column.Caption = "دستگاه";
        column.GroupIndex = 1;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OperationItemCode";
        column.Caption = "کد آیتم";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OperationItemName";
        column.Caption = "نام آیتم";
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "OperationItemCodeCount";
        column.Caption = "تعداد رخ داد";
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
    });


    // --- TotalSummary
    settings.TotalSummary.Add(SummaryItemType.Sum, "OperationItemCodeCount")
        .DisplayFormat = "مجموع: {0:N0}";

    settings.Settings.ShowFooter = true;


    // --- GroupSummary
    settings.GroupSummary.Add(SummaryItemType.Sum, "OperationItemCodeCount").ShowInGroupFooterColumn = "OperationItemCodeCount";

    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowGroupFooter = GridViewGroupFooterMode.VisibleAlways;

    settings.SummaryDisplayText = (sender, e) =>
    {
        if (e.IsGroupSummary)
        {
            if (e.Item.FieldName == "OperationItemCodeCount")
            {
                e.Text = "مجموع: " + Convert.ToDecimal(e.Value).ToString("N0");
            }
        }
    };

    settings.SettingsSearchPanel.Visible = true;
    settings.SettingsSearchPanel.EditorNullTextDisplayMode = NullTextDisplayMode.Unfocused;
    settings.SettingsSearchPanel.AllowTextInputTimer = false;
    settings.SettingsText.SearchPanelEditorNullText = "عبارت مورد نظر جهت جستجو را وارد کنید";

    settings.SettingsExport.EnableClientSideExportAPI = true;
    settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
    settings.Toolbars.Add(t => { t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "خروجی اکسل"; });

    settings.SettingsLoadingPanel.Text = "در حال دریافت اطلاعات";
    settings.SettingsPager.Summary.Text = "صفحه‌ {0} از {1} - تعداد کل : {2}";
    settings.SettingsPager.Summary.Position = PagerButtonPosition.Right;
    settings.SettingsPager.AlwaysShowPager = false;
    settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
    settings.SettingsText.EmptyDataRow = "موردی یافت نشد";
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSize = 500;
    settings.SettingsPager.PageSizeItemSettings.Caption = "تعداد سطر :";
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "50", "100", "200", "500" };

}).Bind(Model).GetHtml()




