@using System.Drawing
@using DevExpress.Data
@model Motorsazan.CMMS.Shared.Models.Output.PreventiveMaintenancesScheduling.OutputGetOperationItemListByPMSchedulingInfoId[]


@Html.DevExpress().GridView(settings =>
{
    settings.Name = "changeToWorkOrderModalGrid";
    settings.CallbackRouteValues = new { Controller = "PreventiveMaintenancesScheduling", Action = "ChangeToWorkOrderModalGrid" };
    settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "PreventiveMaintenancesScheduling", Action = "ChangeToWorkOrderUpdateModel" };

    settings.ClientSideEvents.BeginCallback = "motorsazanClient.preventiveMaintenancesScheduling.handlePreventiveBeginCallback";
    settings.ClientSideEvents.EndCallback = "motorsazanClient.preventiveMaintenancesScheduling.handlePreventiveEndCallback";
    settings.ClientSideEvents.BatchEditStartEditing = "motorsazanClient.preventiveMaintenancesScheduling.batchEditStart";

    settings.Width = Unit.Percentage(100);

    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
    settings.SettingsEditing.BatchEditSettings.KeepChangesOnCallbacks = DefaultBoolean.True;
    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
    settings.SettingsText.ConfirmOnLosingBatchChanges = "تغییرات ذخیره نشده است. آیا از عدم ذخیره مطمئن هستید؟";

    settings.Settings.ShowFilterRow = false;
    settings.Settings.ShowFilterRowMenu = false;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.AllowSelectByRowClick = true;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;

    settings.Styles.Header.Wrap = DefaultBoolean.True;
    settings.Styles.Cell.Wrap = DefaultBoolean.True;

    settings.EnableRowsCache = true;

    settings.KeyFieldName = "PMSchedulingInfoId";

    settings.Columns.Add(column =>
    {
        column.FieldName = "RowIndex";
        column.Caption = "ردیف";
        column.Width = Unit.Pixel(6);
        column.UnboundType = UnboundColumnType.Integer;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        column.EditFormSettings.Visible = DefaultBoolean.False;

        settings.CustomUnboundColumnData = (s, e) =>
        {
            if (e.Column.FieldName == "RowIndex")
            {
                e.Value = e.ListSourceRowIndex + 1;
            }
        };
    });

    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 1;
        column.FieldName = "ParentMachineName";
        column.Caption = " نام دستگاه اصلی";
        column.ReadOnly = true;
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 1;
        column.FieldName = "MachineName";
        column.Caption = " نام دستگاه ";
        column.ReadOnly = true;
    });

    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 2;
        column.FieldName = "OldMachineCode";
        column.Caption = "کد دستگاه";
        column.ReadOnly = true;
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 2;
        column.FieldName = "ParentOperationCode";
        column.Caption = "اپریشن";
        column.ReadOnly = true;
    });
    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 3;
        column.FieldName = "MaintenanceGroupName";
        column.Caption = "گروه تعمیراتی";
        column.ReadOnly = true;
    });

    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 4;
        column.FieldName = "OperationItemName";
        column.Caption = "نام آیتم";
        column.ReadOnly = true;
    });

    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 5;
        column.FieldName = "PersianPreferDate";
        column.Caption = "تاریخ پیشنهادی";
        column.ReadOnly = true;
    });

    settings.Columns.Add(column =>
    {
        column.VisibleIndex = 5;
        column.FieldName = "PersonHour";
        column.Caption = "نفر دقیقه";
        column.PropertiesEdit.DisplayFormatString = "0;0-";
        column.BatchEditModifiedCellStyle.BackColor = ColorTranslator.FromHtml("#22de28");
        column.BatchEditModifiedCellStyle.ForeColor = Color.White;
        column.ColumnType = MVCxGridViewColumnType.TextBox;
    });
    settings.Columns.Add(column =>
    {
        column.Caption = "MachineId";
        column.FieldName = "MachineId";
        column.Visible = true;
        column.EditCellStyle.CssClass = "class_hidden";
        column.EditFormCaptionStyle.CssClass = "class_hidden";
        column.HeaderStyle.CssClass = "class_hidden";
        column.CellStyle.CssClass = "class_hidden";

    });
    settings.CustomJSProperties += (s, e) =>
    {
        if (ViewData["apiResult"] != null)
            e.Properties["cpIsValid"] =Convert.ToBoolean(ViewData["IsEnedeSuccesfully"]);
        e.Properties["cpMessage"] = ViewData["apiResult"];
    };
    settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;

    settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
    settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;

    settings.Styles.SearchPanel.CssClass = "consuming-materials__grid__search-panel";

    settings.SettingsSearchPanel.Visible = true;
    settings.SettingsSearchPanel.EditorNullTextDisplayMode = NullTextDisplayMode.Unfocused;
    settings.SettingsSearchPanel.AllowTextInputTimer = false;
    settings.SettingsText.SearchPanelEditorNullText = "عبارت مورد نظر جهت جستجو در لیست را وارد کنید";

    settings.SettingsLoadingPanel.Text = "در حال دریافت اطلاعات";
    settings.SettingsPager.Summary.Text = "صفحه‌ {0} از {1} - تعداد کل : {2}";
    settings.SettingsPager.Summary.Position = PagerButtonPosition.Right;
    settings.SettingsPager.AlwaysShowPager = false;
    settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
    settings.SettingsText.EmptyDataRow = "موردی یافت نشد";
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSize = 50;
    settings.SettingsPager.PageSizeItemSettings.Caption = "تعداد سطر :";
    settings.SettingsPager.PageSizeItemSettings.Items = new[] { "50", "100", "200", "500" };

}).Bind(Model).GetHtml()