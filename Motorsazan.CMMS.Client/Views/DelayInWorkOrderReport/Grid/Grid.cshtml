@using DevExpress.Data
@using DevExpress.Export
@model Motorsazan.CMMS.Shared.Models.Output.DelayInWorkOrderReport.OutputGetDelayInWorkOrderReportByCondition[]

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "grid";
    settings.CallbackRouteValues = new {Controller = "DelayInWorkOrderReport", Action = "Grid"};
    settings.ClientSideEvents.BeginCallback =
        "motorsazanClient.delayInWorkOrderReport.handleGridBeginCallback";
    settings.Width = Unit.Percentage(100);

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.AllowSelectByRowClick = true;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;

    settings.SettingsBehavior.AutoExpandAllGroups = true;

    settings.EnableRowsCache = true;

    settings.KeyFieldName = "DelayTypeId";


    settings.Columns.Add(column =>
    {
        column.FieldName = "RowIndex";
        column.Caption = "ردیف";
        column.Width = Unit.Pixel(60);
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        column.UnboundType = UnboundColumnType.Integer;
        settings.CustomUnboundColumnData = (s, e) =>
        {
            if (e.Column.FieldName == "RowIndex")
                e.Value = e.ListSourceRowIndex + 1;
        };
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "DurationInMinute";
        column.Caption = "مجموع زمان(دقیقه)";
        column.CellStyle.Wrap = DefaultBoolean.True;
        column.Width = Unit.Percentage(10);
    });


    settings.Columns.Add(column =>
    {
        column.FieldName = "ActionRepeatCount";
        column.Caption = "تعداد تکرار";
        column.CellStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "DelayTitle";
        column.Caption = " عنوان تاخیر";
        column.HeaderStyle.Wrap = DefaultBoolean.True;
        column.CellStyle.Wrap = DefaultBoolean.True;
    });


    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowDeleteButton = false;
    settings.CommandColumn.ShowEditButton = false;
    settings.CommandColumn.ShowNewButton = false;
    settings.CommandColumn.ShowNewButtonInHeader = false;
    settings.CommandColumn.Caption = "مشاهده جزئیات";
    settings.CommandColumn.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;

    settings.CommandColumn.ButtonRenderMode = GridCommandButtonRenderMode.Button;
    settings.CommandColumn.VisibleIndex = 1000;
    settings.ClientSideEvents.CustomButtonClick = "motorsazanClient.delayInWorkOrderReport.handleGridCustomBtnClick";

    var detailCustomButton = new GridViewCommandColumnCustomButton() { ID = "showDetailBtn", Text = " مشاهده جزئیات" };
    detailCustomButton.Styles.Style.CssClass = "app__form-grid-mini-btn ";
    detailCustomButton.Image.IconID = IconID.ActionsSearch16x16devav;
    settings.CommandColumn.CustomButtons.Add(detailCustomButton);
    settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
    settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;

    settings.SettingsExport.EnableClientSideExportAPI = true;
    settings.SettingsExport.ExcelExportMode = ExportType.WYSIWYG;
    settings.Toolbars.Add(t => { t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "خروجی اکسل"; });

    settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
    settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;


    settings.SettingsLoadingPanel.Text = "در حال دریافت اطلاعات";
    settings.SettingsPager.Summary.Text = "صفحه‌ {0} از {1} - تعداد کل : {2}";
    settings.SettingsPager.Summary.Position = PagerButtonPosition.Right;
    settings.SettingsPager.AlwaysShowPager = false;
    settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
    settings.SettingsText.EmptyDataRow = "موردی یافت نشد";
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSize = 25;
    settings.SettingsPager.PageSizeItemSettings.Caption = "تعداد سطر :";
    settings.SettingsPager.PageSizeItemSettings.Items = new[] {"50", "100", "200", "500"};
}).Bind(Model).GetHtml()