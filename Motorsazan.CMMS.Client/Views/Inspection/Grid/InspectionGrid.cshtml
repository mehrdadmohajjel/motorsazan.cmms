@using Motorsazan.CMMS.Client.Controllers
@model Motorsazan.CMMS.Shared.Models.Output.Inspection.OutputGetInspectionListByCondition[]

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "inspectionSourceGird";
    settings.CallbackRouteValues = new { Controller = "Inspection", Action = "InspectionGird" };
    settings.ClientSideEvents.BeginCallback =
        "motorsazanClient.inspection.handleProductiveWorkOrderGridCallbackUrl";
    settings.ClientSideEvents.DetailRowExpanding =
        "motorsazanClient.inspection.setProductiveWorkOrderGridFocusedRowOnExpanding";

    settings.Width = Unit.Percentage(100);

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.AllowSelectByRowClick = true;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
    settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;


    settings.SettingsBehavior.AllowFixedGroups = true;
    settings.SettingsBehavior.AutoExpandAllGroups = true;
    settings.Settings.ShowGroupPanel = true;
    settings.EnableRowsCache = true;

    settings.KeyFieldName = "InspectionId";
    settings.Columns.Add(column =>
    {
        column.FieldName = "RowIndex";
        column.Caption = "ردیف";
        column.Width = Unit.Pixel(60);
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        settings.CustomUnboundColumnData = (s, e) =>
        {
            if (e.Column.FieldName == "RowIndex")
                e.Value = e.ListSourceRowIndex + 1;
        };
    });

    settings.Columns.AddBand(band =>
    {
        band.Caption = "مشخصات ";

        band.Columns.Add(column =>
        {
            column.VisibleIndex = 1;
            column.FieldName = "WorkOrderType";
            column.Caption = "نوع سفارشکار";
        });

        band.Columns.Add(column =>
        {
            column.VisibleIndex = 2;
            column.FieldName = "InspectionTypeShowName";
            column.Caption = "نوع";
        });
        band.Columns.Add(column =>
        {
            column.VisibleIndex = 2;
            column.FieldName = "DepartmentTitle";
            column.Caption = "خط";
            column.GroupIndex = 1;
        });

    });

    settings.Columns.AddBand(band =>
    {
        band.Caption = "مشخصات دستگاه";

        band.Columns.Add(column =>
        {
            column.VisibleIndex = 1;
            column.FieldName = "MachineName";
            column.Caption = "نام دستگاه";
        });

        band.Columns.Add(column =>
        {
            column.VisibleIndex = 2;
            column.FieldName = "OldMachineCode";
            column.Caption = "کد دستگاه";
        });
        band.Columns.Add(column =>
        {
            column.VisibleIndex = 2;
            column.FieldName = "OperationCode";
            column.Caption = "اپریشن";
        });

        band.Columns.Add(column =>
        {
            column.VisibleIndex = 2;
            column.FieldName = "MaintenanceGroupName";
            column.Caption = "گروه تعمیراتی";
            column.EditorProperties().ComboBox(cb =>
            {
                cb.DataSource = InspectionController.GetAllMaintenanceGroupList();
                cb.TextField = "MaintenanceGroupName";
                cb.ValueField = "MaintenanceGroupName";
                cb.ValueType = typeof(string);
                cb.DropDownStyle = DropDownStyle.DropDown;
            });

            column.GroupIndex = 2;
        });
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "WorkOrderSerial";
        column.Caption = "شماره دستورکار";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "ShamsiCreationDateTime";
        column.Caption = "تاریخ پیشنهادی";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "PersonHour";
        column.Caption = "زمان پیش بینی(دقیقه)";
        column.HeaderStyle.Wrap = DefaultBoolean.True;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Description";
        column.Caption = "شرح تعمیر";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "WorkOrderId";
        column.Caption = "0";
        column.Width = Unit.Pixel(0);
        column.Visible = false;
    });
    settings.SettingsDetail.ShowDetailRow = true;
    settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
    settings.SetDetailRowTemplateContent(row =>
    {
        var inspectionID = Convert.ToInt64(DataBinder.Eval(row.DataItem, "InspectionId"));
        var workOrderId = Convert.ToInt64(DataBinder.Eval(row.DataItem, "WorkOrderId"));
        Html.RenderAction("DetailRow", "Inspection", new { InspectionID = inspectionID });
    });



    settings.SettingsExport.EnableClientSideExportAPI = true;
    settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
    settings.Toolbars.Add(t =>
    {
        t.Items.Add(GridViewToolbarCommand.ExportToXlsx).Text = "خروجی اکسل";
    });

    settings.SettingsLoadingPanel.Text = "در حال دریافت اطلاعات";
    settings.SettingsPager.Summary.Text = "صفحه‌ {0} از {1} - تعداد کل : {2}";
    settings.SettingsPager.Summary.Position = PagerButtonPosition.Right;
    settings.SettingsPager.AlwaysShowPager = false;
    settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
    settings.SettingsText.EmptyDataRow = "موردی یافت نشد";
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSize = 25;
    settings.SettingsPager.PageSizeItemSettings.Caption = "تعداد سطر :";
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "50", "100", "200", "500" };

}).Bind(Model).GetHtml()
